{"version":3,"file":"index.cjs","sources":["../src/validation/regex.ts","../src/validation/schemas.ts","../src/routes/account/create.ts"],"sourcesContent":["export namespace Regex {\n\t// Fiscal codes\n\texport const vat = /^[0-9]{11}$/;\n\texport const sdi = /^([0-9]|[A-Z]){6,7}$/;\n\texport const cf =\n\t\t/^(?:[A-Z][AEIOU][AEIOUX]|[AEIOU]X{2}|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}(?:[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[15MR][\\dLMNP-V]|[26NS][0-8LMNP-U])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM]|[AC-EHLMPR-T][26NS][9V])|(?:[02468LNQSU][048LQU]|[13579MPRTV][26NS])B[26NS][9V])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$/;\n\n\t// Location\n\texport const provincia = /^[A-Z]{2}$/;\n\texport const cap = /^[0-9]{5}$/;\n\n\t// Contacts\n\texport const pec = /^(.*)@(?:\\w*\\.)*pec(?:\\.\\w+)+$/;\n\texport const phone = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n\texport const url =\n\t\t/^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n}\n","import * as yup from \"yup\";\nimport { Regex as re } from \"./regex\";\n\nexport namespace Schemas {\n\t/**\n\t * Basic schemas\n\t */\n\n\texport const url = yup.string().lowercase().matches(re.url);\n\n\texport const cf = yup.string().uppercase().matches(re.cf);\n\texport const vat = yup.string().matches(re.vat);\n\texport const sdi = yup.string().uppercase().matches(re.sdi);\n\n\texport const phone = yup.string().matches(re.phone);\n\texport const email = yup.string().email();\n\texport const pec = email.matches(re.pec);\n\n\texport const provincia = yup.string().uppercase().matches(re.provincia);\n\texport const cap = yup.string().matches(re.cap);\n\n\t/**\n\t * Yup dynamic checks\n\t */\n\n\texport function thenReq(value: boolean | string) {\n\t\treturn {\n\t\t\tis: value,\n\t\t\tthen: (schema: yup.AnySchema) => schema.required(),\n\t\t\totherwise: (schema: yup.AnySchema) => schema.nullable().optional(),\n\t\t};\n\t}\n\n\texport function thenUrlReq(value: boolean | string) {\n\t\treturn {\n\t\t\tis: value,\n\t\t\tthen: (schema: yup.AnySchema) => url.required(),\n\t\t\totherwise: (schema: yup.AnySchema) => schema.nullable().optional(),\n\t\t};\n\t}\n\n\texport function thenNull(value: boolean | string) {\n\t\treturn {\n\t\t\tis: value,\n\t\t\tthen: (schema: yup.AnySchema) => schema.nullable().optional(),\n\t\t\totherwise: (schema: yup.AnySchema) => schema.required(),\n\t\t};\n\t}\n\n\texport const nullOrReq = {\n\t\tis: (v: string | boolean | number) => v == true,\n\t\tthen: (s: yup.AnySchema) => s.nullable(),\n\t\totherwise: (s: yup.AnySchema) => s.required(),\n\t};\n}\n","import * as yup from \"yup\";\nimport { Schemas } from \"../../validation\";\n\nexport namespace Create {\n\texport interface Request {\n\t\tname: string;\n\t\tsurname: string;\n\t\temail: string;\n\t\tpassword: string;\n\t}\n\n\texport const values: Request = {\n\t\tname: \"\",\n\t\tsurname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t};\n\n\texport const schema = yup.object({\n\t\tname: yup.string().required(),\n\t\tsurname: yup.string().required(),\n\t\temail: Schemas.email.required(),\n\t\tpassword: yup.string().required(),\n\t});\n\n\texport interface Response {}\n}\n"],"names":["Regex","vat","sdi","cf","provincia","cap","pec","phone","url","Schemas","yup","string","lowercase","matches","re","uppercase","email","thenReq","value","is","then","schema","required","otherwise","nullable","optional","thenUrlReq","thenNull","nullOrReq","v","s","Create","values","name","surname","password","object"],"mappings":"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"}