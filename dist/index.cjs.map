{"version":3,"file":"index.cjs","sources":["../src/validation/regex.ts","../src/validation/schemas.ts","../src/types/httpMethod.ts","../src/routes/account/create.ts","../src/errors/index.ts"],"sourcesContent":["export namespace Regex {\n\t// Fiscal codes\n\texport const vat = /^[0-9]{11}$/;\n\texport const sdi = /^([0-9]|[A-Z]){6,7}$/;\n\texport const cf =\n\t\t/^(?:[A-Z][AEIOU][AEIOUX]|[AEIOU]X{2}|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}(?:[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[15MR][\\dLMNP-V]|[26NS][0-8LMNP-U])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM]|[AC-EHLMPR-T][26NS][9V])|(?:[02468LNQSU][048LQU]|[13579MPRTV][26NS])B[26NS][9V])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$/;\n\n\t// Location\n\texport const provincia = /^[A-Z]{2}$/;\n\texport const cap = /^[0-9]{5}$/;\n\n\t// Contacts\n\texport const pec = /^(.*)@(?:\\w*\\.)*pec(?:\\.\\w+)+$/;\n\texport const phone = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n\texport const url =\n\t\t/^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n}\n","import * as yup from \"yup\";\nimport { Regex as re } from \"./regex\";\n\nexport namespace Schemas {\n\t/**\n\t * Basic schemas\n\t */\n\n\texport const url = yup.string().lowercase().matches(re.url);\n\n\texport const cf = yup.string().uppercase().matches(re.cf);\n\texport const vat = yup.string().matches(re.vat);\n\texport const sdi = yup.string().uppercase().matches(re.sdi);\n\n\texport const phone = yup.string().matches(re.phone);\n\texport const email = yup.string().email();\n\texport const pec = email.matches(re.pec);\n\n\texport const provincia = yup.string().uppercase().matches(re.provincia);\n\texport const cap = yup.string().matches(re.cap);\n\n\t/**\n\t * Yup dynamic checks\n\t */\n\n\texport function thenReq(value: boolean | string) {\n\t\treturn {\n\t\t\tis: value,\n\t\t\tthen: (schema: yup.AnySchema) => schema.required(),\n\t\t\totherwise: (schema: yup.AnySchema) => schema.nullable().optional(),\n\t\t};\n\t}\n\n\texport function thenUrlReq(value: boolean | string) {\n\t\treturn {\n\t\t\tis: value,\n\t\t\tthen: (schema: yup.AnySchema) => url.required(),\n\t\t\totherwise: (schema: yup.AnySchema) => schema.nullable().optional(),\n\t\t};\n\t}\n\n\texport function thenNull(value: boolean | string) {\n\t\treturn {\n\t\t\tis: value,\n\t\t\tthen: (schema: yup.AnySchema) => schema.nullable().optional(),\n\t\t\totherwise: (schema: yup.AnySchema) => schema.required(),\n\t\t};\n\t}\n\n\texport const nullOrReq = {\n\t\tis: (v: string | boolean | number) => v == true,\n\t\tthen: (s: yup.AnySchema) => s.nullable(),\n\t\totherwise: (s: yup.AnySchema) => s.required(),\n\t};\n}\n","export enum HTTPMethod {\n\tCONNECT = \"CONNECT\",\n\tDELETE = \"DELETE\",\n\tGET = \"GET\",\n\tHEAD = \"HEAD\",\n\tOPTIONS = \"OPTIONS\",\n\tPATCH = \"PATCH\",\n\tPOST = \"POST\",\n\tPUT = \"PUT\",\n\tTRACE = \"TRACE\",\n}\n","import * as yup from \"yup\";\nimport { Schemas } from \"../../validation\";\nimport { HTTPMethod } from \"../../types\";\n\nexport namespace Create {\n\texport const path = \"/account/create\";\n\texport const method = HTTPMethod.POST;\n\n\texport interface Req {\n\t\tname: string;\n\t\tsurname: string;\n\t\temail: string;\n\t\tpassword: string;\n\t}\n\n\texport const values: Req = {\n\t\tname: \"\",\n\t\tsurname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t};\n\n\texport const schema = yup\n\t\t.object({\n\t\t\tname: yup.string().required(),\n\t\t\tsurname: yup.string().required(),\n\t\t\temail: Schemas.email.required(),\n\t\t\tpassword: yup.string().required(),\n\t\t})\n\t\t.required();\n\n\texport interface Res {}\n}\n","export const errors = {\n\tpolicies: {\n\t\tnoSchemaInConfig: \"noSchemaInConfig\",\n\t\tbodyNotValid: \"bodyNotValid\",\n\t},\n\t// AlreadyEnrolled: \"AlreadyEnrolled\",\n\t// BadPolicyConfig: \"BadPolicyConfig\",\n\t// DefaultRoleNotFound: \"DefaultRoleNotFound\",\n\t// EmailSendError: \"EmailSendError\",\n\t// EmailTaken: \"EmailTaken\",\n\t// EnrollmentExpired: \"EnrollmentExpired\",\n\t// InternalServerError: \"InternalServerError\",\n\t// InvalidRequestBody: \"InvalidRequestBody\",\n\t// InvalidRole: \"InvalidRole\",\n\t// MissingCourseID: \"MissingCourseID\",\n\t// MissingUserInfo: \"MissingUserInfo\",\n\t// NoSchemaProvidedInPolicyConfig: \"NoSchemaProvidedInPolicyConfig\",\n\t// NotFound: \"NotFound\",\n\t// PasswordThreeDollars: \"PasswordThreeDollars\",\n\t// PaymentAlreadyConfirmed: \"PaymentAlreadyConfirmed\",\n\t// PaymentAlreadyPaid: \"PaymentAlreadyPaid\",\n\t// PaymentExpired: \"PaymentExpired\",\n\t// PaymentNotFound: \"PaymentNotFound\",\n\t// RegisterDisabled: \"RegisterDisabled\",\n\t// UnknownError: \"UnknownError\",\n\t// UserExists: \"UserExists\",\n\t// UserNotConfirmed: \"UserNotConfirmed\",\n\t// UserNotFound: \"UserNotFound\",\n\t// ValidationError: \"ValidationError\",\n};\n"],"names":["Regex","vat","sdi","cf","provincia","cap","pec","phone","url","Schemas","yup","string","lowercase","matches","re","uppercase","email","thenReq","value","is","then","schema","required","otherwise","nullable","optional","thenUrlReq","thenNull","nullOrReq","v","s","HTTPMethod","Create","path","method","POST","values","name","surname","password","object","errors","policies","noSchemaInConfig","bodyNotValid"],"mappings":"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"}